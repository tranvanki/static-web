body {
    font-family: Arial, Helvetica, sans-serif;
}

* {
    box-sizing: border-box;
}

/* style the container */
.container {
    
    position: relative;
    border-radius: 5px;

    background-color: white;
    padding: 20px 0 30px 0;
} 

/* style inputs and link buttons */
input,
.btn {
    /* Remove the default browser styling */
    appearance: none;

    width: 100%;

    /* Adds some spacing to all sides of our element */
    padding: 12px;

    border: none;

    /* Add our rounded corners */
    border-radius: 4px;
    margin: 5px 0;
    opacity: 0.85;
    display: inline-block;
    font-size: 17px;
    line-height: 1.2em;
    text-decoration: none;
}


input:hover,
.btn:hover {
    opacity: 1;
}
/* add appropriate colors to fb, twitter and google buttons */
.fb {
    background-color: #3B5998;
    color: white;
    }
    .twitter {
    background-color: #55ACEE;
    color: white;
    }
    .google {
    background-color: #dd4b39;
    color: white;
    }
    /* style the submit button */
    input[type=submit] {
    background-color: #04AA6D;
    color: white;
    cursor: pointer;
    }
    input[type=submit]:hover {
    background-color: #45a049;
    }
    /* hide some text on medium and large screens */
.hide-md-lg {
    display: none;
    }
    /* Responsive layout - when the screen is less than 650px wide, make the
    two columns stack on top of each other instead of next to each other */
    @media screen and (max-width: 650px) {
    .col {
    width: 100%;
    margin-top: 0;
    }
    /* hide the vertical line */
    .vl {
        display: none;
}
/* show the hidden text on small screens */
.hide-md-lg {
display: block;
text-align: center;
}
}
 /* Two-column layout */
 .col {
    float: left;
    width: 50%;
    margin: auto;
    padding: 0 50px;

    /* We override the "margin: auto" above specifically just for the top margin, and set that to our value */
    margin-top: 6px;
}
/* We use this pseudo selector to add styling after an element */
.row:after {
    content: "";
    display: table;
    clear: both;
}

/* vertical line */
.vl {
    /* Absolute removes the element from the page layout and positions based on given coordinates, in relation to the "relative" container - this is why on the container we set the position to relative. Try removing the line "position: relative" from the "container" class and see what happens. It should default to position against the whole page */
    position: absolute;
    left: 50%;
    transform: translate(-50%);
    border: 2px solid #ddd;
    height: 175px;
}

/* text inside the vertical line, we need to position this in the center vertically and horizontally */
.vl-innertext {
    /* We use absolute again, this is relative to the parent class "vl" because it is also absolute */
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);

    /* Match the background colour to give the illusion  */
    background-color: white;

    /* Add our border, short hand */
    border: 1px solid #ccc;

    /* We can use percentages in our border radius, using 50% means every corner is rounded to half the width/height of the element, effectively creating a circle on a square element */
    border-radius: 50%;
    padding: 8px 10px;
}

/* bottom container */
.bottom-container {
    /* Due to the nature of inheritance in CSS we can set how we want our text to align once and it'll carry on down to the child elements - good way to optimise our code */
    text-align: center;
    background-color: #666;

    /* Long form radius, we only wan to round specific corners - inspect to see what ones */
    border-radius: 0px 0px 4px 4px;
}
p {font-size: 23px;}
